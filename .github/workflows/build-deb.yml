name: Build and Release .deb Package

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: debian:bullseye-slim
    env:
      PKG_NAME: simplefuckingtimer
      PKG_RELEASE: 1
    outputs:
      pkg_version: ${{ steps.set_version.outputs.pkg_version }}
      deb_file: ${{ steps.rename.outputs.deb_file }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Version Using Date, Hour, and Minute
        id: set_version
        run: |
          PKG_VERSION=$(date +%Y%m%d%H%M)
          echo "PKG_VERSION=$PKG_VERSION" >> $GITHUB_ENV
          echo "pkg_version=$PKG_VERSION" >> $GITHUB_OUTPUT

      - name: Install Dependencies
        run: |
          apt-get update
          apt-get install -y build-essential libsdl2-dev libsdl2-ttf-dev libx11-dev checkinstall

      - name: Build the Application
        run: make

      - name: Build Debian Package with checkinstall
        run: |
          checkinstall --pkgname=$PKG_NAME --pkgversion=$PKG_VERSION --pkgrelease=$PKG_RELEASE --default --install=no

      - name: Rename .deb Package
        id: rename
        run: |
          DEB_FILE=$(ls *.deb | head -n 1)
          NEW_NAME="${PKG_NAME}-${PKG_VERSION}-${PKG_RELEASE}_amd64.deb"
          mv "$DEB_FILE" "$NEW_NAME"
          echo "deb_file=$NEW_NAME" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: "${{ env.PKG_NAME }}-${{ env.PKG_VERSION }}-${{ env.PKG_RELEASE }}_amd64.deb"

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: package
          path: .
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.build.outputs.pkg_version }}
          release_name: Release ${{ needs.build.outputs.pkg_version }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "${{ needs.build.outputs.deb_file }}"
          asset_name: "${{ needs.build.outputs.deb_file }}"
          asset_content_type: application/vnd.debian.binary-package

